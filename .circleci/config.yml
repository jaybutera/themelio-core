version: 2.1

description: Build, test and deploy T

jobs:

  build:
    docker:
      - image: cimg/rust:1.45.0
        auth:
          username: themeliolabs
          password: $DOCKERHUB_PASSWORD
    parameters:
      path:
        type: string
        default: .
      release:
        type: boolean
        default: false
    steps:
      - install_deps
      - checkout
      - restore_cache:
          keys:
            - cargo-cache-v1-{{ arch }}-{{ checksum "<<parameters.path>>/Cargo.lock" }}
            - cargo-cache-v1-{{ arch }}-
      - run:
          name: Build
          command: |
            cd <<parameters.path>>
            if [ "<<parameters.release>>" == "true" ]; then
              cargo build --release --verbose
            else
              cargo build --verbose
            fi
      - save_cache:
          key: cargo-cache-v1-{{ arch }}-{{ checksum "<<parameters.path>>/Cargo.lock"
            }}
          paths:
            - <<parameters.path>>/target

  test:
    docker:
      - image: cimg/rust:1.45.0
        auth:
          username: themeliolabs
          password: $DOCKERHUB_PASSWORD
    parameters:
      path:
        type: string
        default: .
    steps:
      - install_deps
      - checkout
      - restore_cache:
          keys:
            - cargo-cache-v1-{{ arch }}-{{ checksum "<<parameters.path>>/Cargo.lock" }}
            - cargo-cache-v1-{{ arch }}-
      - run:
          name: Run tests
          command: |
            cd <<parameters.path>>
            cargo test --verbose
      - save_cache:
          key: cargo-cache-v1-{{ arch }}-{{ checksum "<<parameters.path>>/Cargo.lock"
            }}
          paths:
            - <<parameters.path>>/target

  deploy:
    docker:
      - image: cimg/rust:1.45.0
        auth:
          username: themeliolabs
          password: $DOCKERHUB_PASSWORD
    parameters:
      path:
        type: string
        default: .
      server_path:
        type: string
        default: $SERVER_PATH
      server_address:
        type: string
        default: $SERVER_ADDRESS
    steps:
      - install_deps
      - checkout
      - restore_cache:
          keys:
            - cargo-cache-v1-{{ arch }}-{{ checksum "<<parameters.path>>/Cargo.lock" }}
            - cargo-cache-v1-{{ arch }}-
      - run:
          name: Build release
          command: |
            cd <<parameters.path>>
            cargo build --verbose --release
      - run:
          name: Deploy release
          command: |
            rsync -avrt --delete --rsh='ssh -p 22' root@<<parameters.server_address>>:<<parameters.server_path>> <<parameters.path>>

commands:
  install_deps:
    steps:
      - run:
          name: Install deps
          command: |
            sudo apt-get update
            sudo apt-get install -y sqlite3 libsqlite3-dev rsync

workflows:
  build-test-release:
    jobs:
      - build
      - test
          requires:
            - build
      - deploy
          requires:
            - test